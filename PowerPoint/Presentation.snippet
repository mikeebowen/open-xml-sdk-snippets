<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Create PowerPoint Presentation</Title>
      <Description>Create a PowerPoint presentation file.</Description>
      <Shortcut>PowerPoint_CreatePresentation</Shortcut>
    </Header>
    <Snippet>
      <Code Language="CSharp">
        <![CDATA[
				// REQUIRED: Add Open XML SDK PowerPoint Utils item. Right-click the project in Solution Explorer | Add | New Item... | Open XML SDK PowerPoint Utils
				PresentationDocument presentationDocument = PowerPointUtils.CreatePresentation($FilePath$);
				// TODO: manipulate the presentation
            presentationDocument.Save();
            presentationDocument.Close();]]>
      </Code>
      <Imports>
        <Import>
          <Namespace>OpenXmlSdkUtils</Namespace>
        </Import>
        <Import>
          <Namespace>DocumentFormat.OpenXml.Packaging</Namespace>
        </Import>
      </Imports>
      <Declarations>
        <Literal>
          <ID>FilePath</ID>
          <ToolTip>Path to save the presentation or a string variable containing the path.</ToolTip>
          <Default>@"c:\temp\mypresentation.pptx"</Default>
        </Literal>
      </Declarations>
    </Snippet>
  </CodeSnippet>
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Validate a Presentation document</Title>
      <Shortcut>Presentation_ValidateDocument</Shortcut>
      <Description>Validate a Presentation document.</Description>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations>
        <Literal>
          <ID>FilePath</ID>
          <ToolTip>Path to read the presentation or a string variable containing the path.</ToolTip>
          <Default>@"c:\temp\myworkbook.xlsx"</Default>
        </Literal>
      </Declarations>
      <Code Language="CSharp">
        <![CDATA[
// Validate a document by supplying the filepath.
using (PresentationDocument presentationDocument = PresentationDocument.Open($FilePath$, true))
{                  
    try
    {           
        OpenXmlValidator validator = new OpenXmlValidator();
        int count = 0;
        foreach (ValidationErrorInfo error in
            validator.Validate(presentationDocument))
        {
            count++;
            Console.WriteLine("Error " + count);
            Console.WriteLine("Description: " + error.Description);
            Console.WriteLine("ErrorType: " + error.ErrorType);
            Console.WriteLine("Node: " + error?.Node ?? "unavailable");
            Console.WriteLine("Path: " + error?.Path?.XPath ?? "unavailable");
            Console.WriteLine("Part: " + error?.Part?.Uri ?? "unavailable");
            Console.WriteLine("-------------------------------------------");
        }

        Console.WriteLine("count={0}", count);
        }
        
    catch (Exception ex)
    {
        Console.WriteLine(ex.Message);              
    }

    presentationDocument.Close();
}
]]>
      </Code>
      <Imports>
        <Import>
          <Namespace>DocumentFormat.OpenXml</Namespace>
        </Import>
        <Import>
          <Namespace>DocumentFormat.OpenXml.Packaging</Namespace>
        </Import>
        <Import>
          <Namespace>DocumentFormat.OpenXml.Presentation</Namespace>
        </Import>
        <Import>
          <Namespace>DocumentFormat.OpenXml.Validation</Namespace>
        </Import>
      </Imports>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>